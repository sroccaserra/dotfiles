unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

bind-key a last-window

set -g base-index 1
setw -g pane-base-index 1

bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

setw -g mouse on

# set -g status-fg white
# set -g status-bg black

# setw -g window-status-style fg=cyan,bg=default,dim
# setw -g window-status-current-style fg=white,bg=red,bright
# set -g pane-border-style fg=green,bg=black
# set -g pane-active-border-style fg=white,bg=green

set -g status-interval 60
set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on

set -g status-left-length 40
# set -g status-left "#[fg=green]Session: #s #[fg=yellow]#I #[fg=cyan]#P"
# set -g status-right "#[fg=green]#H #[fg=cyan]%d %b %R"

bind-key P pipe-pane -o "cat >> ~/#W-tmux.log" \; display-message "Toggled logging to ~/#W-tmux.log"

bind-key C-t last-pane \; send-keys C-p C-m \; last-pane

### Shared with Byobu ###

set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -s escape-time 1
set -g default-terminal "screen-256color"
set -g default-shell /usr/local/bin/fish

# Keep ssh-agent through detached sessions
set -g update-environment 'SSH_AUTH_SOCK'
set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock

set-option -g history-limit 100000
setw -g aggressive-resize on

setw -g xterm-keys on
set-window-option -g mode-keys vi

set -g focus-events on

#set -g status-utf8 on
#setw -g utf8 on

unbind-key C-z

bind-key - split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

bind-key m split-window -h -p 38 -c "#{pane_current_path}"

bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

bind-key -T copy-mode-vi v send-keys -X begin-selection

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Bind C-l and C-k, hidden by vim-tmux-navigator. Note: use <prefix> C-k and
# <prefix> C-l
bind-key C-k send-keys 'C-k'
bind-key C-l send-keys 'C-l'
